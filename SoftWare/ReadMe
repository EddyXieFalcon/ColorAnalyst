1. 本软件基于python3.6版本进行开发，以及运行，依赖的package参见requirement.txt，并使用cython，和pyinstaller进行打包

2. 软件遵循MVC设计模式，即（modular模型， view视图， controller控制器）三方分离的方式

    2.1 软件入口为：main.py，主要实现软件启动时候的各个模块的部署

    2.2 UIModular：主要负责实现软件的界面，以及界面的交互逻辑，即view（视图）

        2.2.1 UI中，每一个package有四个文件：
            2.2.1.1 ******UI.ui文件：基于qtdesigner创建的UI界面框架文件，提供ui的骨架
            2.2.1.2 ******UI.py文件：基于******UI.ui文件，由pyuic转换得到的py文件，提供ui的骨架的基类
            2.2.1.3 ******Modify.py文件：继承******UI.py文件基类，主要负责对ui的骨架的贴图，美化，以及动态效果的实现
            2.2.1.4 ******Widget.py文件：继承******Modify.py文件基类，主要负责实现ui的响应逻辑，该文件提供的是最终的子类，
                    程序逻辑中，所有实例化的ui的对象，使用的都是该文件提供的类

        2.2.2 MainWindow，提供UI的主窗口
            2.2.2.1 FunctionWidget，提供UI中不断反复被切换的功能面板的容器，里面填方多个子对象
                2.2.2.1.1 HomeWidget，提供主功能面板，当主界面的Home按钮被点击的时候，该面板被显示
                2.2.2.1.2 ProtocolsWidget，提供Protocol功能面板，当主界面的Protocols按钮被点击的时候，该面板被显示
            2.2.2.2 StatusWidget，提供UI主界面下方的状态栏的类

    2.3 ControllerModular：主要负责实现软件与硬件的消息通讯，即使用pyserial实现串口通信，保证ui下发的指令的解析，以及的执行

        2.3.1 Device：为一个单例模式类，提供UI和Analysis模块访问硬件的接口，该类中，维护了6个子线程，分别用于对XYZ三个方向的马达，
              检测泵，滤光片切换，CCD六个主要硬件进行访问
        2.3.2 InstructionsMgr：该类用于读取指令json表，将程序中的接口调用，转换为串口通信使用的对应的二进制码
        2.3.3 ParameterMgr：该类用于读取预设参数json表，用以初始化硬件
        2.3.4 COM：该package提供了所有的XYZ三个方向的马达，检测泵，滤光片切换，五个硬件的串口访问类，
            2.3.4.1 BaseCOM：该类为所有的串口访问基类，继承自一个线程类，用以防止软件访问硬件的时候，
                    由于串口消息阻塞，造成软件的卡顿与奔溃，类中实现了一个消息队列
            2.3.4.2 其余的COM类，均为对BaseCOM类的继承，主要用于实现，各个硬件抽象操作接口的实现

    2.4 AnalysisModular：主要负责实现数据的处理和分析
